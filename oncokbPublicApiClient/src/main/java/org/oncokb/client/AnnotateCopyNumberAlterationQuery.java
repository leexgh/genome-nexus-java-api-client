/*
 * OncoKB APIs
 * OncoKB, a comprehensive and curated precision oncology knowledge base, offers oncologists detailed, evidence-based information about individual somatic mutations and structural alterations present in patient tumors with the goal of supporting optimal treatment decisions.
 *
 * OpenAPI spec version: v1.0.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.oncokb.client.QueryGene;

/**
 * AnnotateCopyNumberAlterationQuery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-04T16:44:56.103-05:00")
public class AnnotateCopyNumberAlterationQuery {
  /**
   * Gets or Sets copyNameAlterationType
   */
  @JsonAdapter(CopyNameAlterationTypeEnum.Adapter.class)
  public enum CopyNameAlterationTypeEnum {
    AMPLIFICATION("AMPLIFICATION"),
    
    DELETION("DELETION"),
    
    GAIN("GAIN"),
    
    LOSS("LOSS");

    private String value;

    CopyNameAlterationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CopyNameAlterationTypeEnum fromValue(String text) {
      for (CopyNameAlterationTypeEnum b : CopyNameAlterationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CopyNameAlterationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CopyNameAlterationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CopyNameAlterationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CopyNameAlterationTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("copyNameAlterationType")
  private CopyNameAlterationTypeEnum copyNameAlterationType = null;

  @SerializedName("gene")
  private QueryGene gene = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("tumorType")
  private String tumorType = null;

  public AnnotateCopyNumberAlterationQuery copyNameAlterationType(CopyNameAlterationTypeEnum copyNameAlterationType) {
    this.copyNameAlterationType = copyNameAlterationType;
    return this;
  }

   /**
   * Get copyNameAlterationType
   * @return copyNameAlterationType
  **/
  @ApiModelProperty(value = "")
  public CopyNameAlterationTypeEnum getCopyNameAlterationType() {
    return copyNameAlterationType;
  }

  public void setCopyNameAlterationType(CopyNameAlterationTypeEnum copyNameAlterationType) {
    this.copyNameAlterationType = copyNameAlterationType;
  }

  public AnnotateCopyNumberAlterationQuery gene(QueryGene gene) {
    this.gene = gene;
    return this;
  }

   /**
   * Get gene
   * @return gene
  **/
  @ApiModelProperty(value = "")
  public QueryGene getGene() {
    return gene;
  }

  public void setGene(QueryGene gene) {
    this.gene = gene;
  }

  public AnnotateCopyNumberAlterationQuery id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AnnotateCopyNumberAlterationQuery tumorType(String tumorType) {
    this.tumorType = tumorType;
    return this;
  }

   /**
   * Get tumorType
   * @return tumorType
  **/
  @ApiModelProperty(value = "")
  public String getTumorType() {
    return tumorType;
  }

  public void setTumorType(String tumorType) {
    this.tumorType = tumorType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotateCopyNumberAlterationQuery annotateCopyNumberAlterationQuery = (AnnotateCopyNumberAlterationQuery) o;
    return Objects.equals(this.copyNameAlterationType, annotateCopyNumberAlterationQuery.copyNameAlterationType) &&
        Objects.equals(this.gene, annotateCopyNumberAlterationQuery.gene) &&
        Objects.equals(this.id, annotateCopyNumberAlterationQuery.id) &&
        Objects.equals(this.tumorType, annotateCopyNumberAlterationQuery.tumorType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(copyNameAlterationType, gene, id, tumorType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotateCopyNumberAlterationQuery {\n");
    
    sb.append("    copyNameAlterationType: ").append(toIndentedString(copyNameAlterationType)).append("\n");
    sb.append("    gene: ").append(toIndentedString(gene)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tumorType: ").append(toIndentedString(tumorType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

